<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Assignment 8</title>

    <!-- React Library -->
    <script src="https://unpkg.com/react@16/umd/react.development.js"></script>
    <!-- React DOM Library -->
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>
    <!-- Babel Library -->
    <script src="https://unpkg.com/babel-standalone@6.15.0/babel.min.js"></script>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
        crossorigin="anonymous">
</head>

<body>
    <div id="app">React not rendering</div>

    <script type="text/babel">
        class App extends React.Component {
            // constructor function
            constructor(props) {
                super(props);
        
                // set state 
                this.state = { 
                    books: [], 
                    selected: null,
                    addBook: false
                };

                // bind events to this
                this.showAll = this.showAll.bind(this);
                this.showBook = this.showBook.bind(this);
                this.resetData = this.resetData.bind(this);
                this.deleteBook = this.deleteBook.bind(this);
                this.showForm = this.showForm.bind(this);
                this.hideForm = this.hideForm.bind(this);
                this.searchTitle = this.searchTitle.bind(this);
            }

            // code to run when page loads; get all books
            componentDidMount() {
                this.showAll();
            }

            // show all books
            showAll(e) {
                if(e) {
                    e.preventDefault();
                    this.setState({ selected: null });
                    document.getElementById('title-search').value = '';
                }
                fetch('/api/books/')
                .then(response => response.json())
                .then(responseData => { this.setState({ books: responseData } )})
                .catch((err) => { console.log('Fetching and parsing data error', err) });
            }

            // show single book details
            showBook(id, e) {
                e.preventDefault();
                const book = this.state.books.find((book) => book._id === id);
                this.setState({ selected: book });
            }

            // reset to list view
            resetData() {
                this.setState({ selected: null });
            }

            // delete book
            deleteBook(id, e) {
                e.preventDefault();
                fetch(`/api/book/delete/${id}`, {
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' },
                })
                .then((data) => {
                    const books = this.state.books.filter((book) => id !== book._id);
                    this.setState({ books: books });
                    this.resetData();
                })
                .catch((err) => { console.log('Fetching and parsing data error', err) });                
            }

            // show form
            showForm(e) {
                e.preventDefault();
                this.setState({ addBook: true });
            }

            //remove form after submission
            hideForm() {
                this.showAll();
                this.setState({ addBook: false });
            }

            searchTitle(title) {
                console.log(title);
                const pattern = new RegExp(title, 'i');
                const books = this.state.books.filter(book => book.title.match(pattern)); 
                console.log(books);
                this.setState({ books: books });
            }

            render() {
                if(this.state.addBook) {
                    return(
                        <div>
                            <Nav search={this.searchTitle} add={(e) => this.showForm(e)} goHome={(e) => this.showAll(e)} />
                            <BookForm action={this.hideForm} />
                        </div>
                    );
                } else if (this.state.selected) {
                    return(
                        <div>
                            <Nav search={this.searchTitle} add={(e) => this.showForm(e)} goHome={(e) => this.showAll(e)} />
                            <table className="table">
                                <tbody>
                                    <tr key={this.state.selected._id}>
                                        <td>Title</td>
                                        <td>{this.state.selected.title}</td>
                                    </tr>
                                    <tr>
                                        <td>Author</td>
                                        <td>{this.state.selected.author}</td>
                                    </tr>
                                    <tr>
                                        <td>Publishing Date</td>
                                        <td>{this.state.selected.pubDate}</td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <button className="btn btn-outline-success my-2 my-sm-0" href="#" onClick={this.resetData}>Back to Book List</button>
                                            <button className="btn btn-outline-success my-2 my-sm-0" href="#" onClick={(e) => this.deleteBook(this.state.selected._id, e)}>Delete Book</button>
                                        </td>
                                        <td></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    );
                } else if (this.state.books.length) {
                    return(
                        <div>
                            <Nav search={this.searchTitle} add={(e) => this.showForm(e)} goHome={(e) => this.showAll(e)} />
                            <table className="table">
                                <thead className="thead-dark">
                                    <tr>
                                        <th>Title</th>
                                        <th>Author</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {this.state.books.map((item) => {
                                        return (
                                            <tr key={item._id}>
                                                <td><a href="#" onClick={(e) => this.showBook(item._id, e)}>{item.title}</a></td>
                                                <td>{item.author}</td>
                                            </tr>
                                        );
                                    })}
                                </tbody>
                            </table>
                            <button className="btn btn-outline-success my-2 my-sm-0" href="#" onClick={(e) => this.showForm(e)}>Add Book</button>
                            <button className="btn btn-outline-success my-2 my-sm-0" href="#" onClick={(e) => this.showAll(e)}>Back to List</button>
                        </div>
                    );                 
                } else {
                    return <h2>Whoopsies</h2>
                }
            }
        }

        class Nav extends React.Component {
            constructor(props) {
                super(props);
        
                this.state = { 
                    search: ''
                };
                                
                this.onInputChange = this.onInputChange.bind(this);
                this.onSearch = this.onSearch.bind(this);
            }

            onInputChange(e) {
                const value = e.target.value; 
                this.setState({ search : value });
            }

            onSearch(e) {
                e.preventDefault();
                console.log(this.state.search);
                this.props.search(this.state.search);
                this.setState({ search: '' });
            }          

            render() {
                return(
                    <nav className="navbar navbar-expand-lg navbar-light bg-light">
                        <a className="navbar-brand" href="#" onClick={this.props.goHome}>My Library</a>
                        <button className="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
                            aria-expanded="false" aria-label="Toggle navigation">
                            <span className="navbar-toggler-icon"></span>
                        </button>
                    
                        <div className="collapse navbar-collapse" id="navbarSupportedContent">
                            <ul className="navbar-nav mr-auto">
                                <li className="nav-item">
                                    <a className="nav-link" href="#" onClick={this.props.goHome}>Home
                                        <span className="sr-only">(current)</span>
                                    </a>
                                </li>
                                <li className="nav-item">
                                    <a className="nav-link" href="#" onClick={(e) => this.props.add(e)}>Add Book</a>
                                </li>
                            </ul>
                            <form className="form-inline my-2 my-lg-0" onSubmit={(e) => this.onSearch(e)}>
                                <input className="form-control mr-sm-2" type="search" placeholder="Search by Title" aria-label="Search by Title" id="title-search" name="title" onChange={(e) => this.onInputChange(e)}/>
                                <button className="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
                            </form>
                        </div>
                    </nav>
                );
            }
        } 

        class BookForm extends React.Component {
            constructor(props) {
                super(props);

                this.state = {
                    title: '',
                    author: '',
                    pubDate: 0
                };

                this.onInputChange = this.onInputChange.bind(this);
                this.addBook = this.addBook.bind(this);
            }

            onInputChange(e) {
                const key = e.target.name;
                const value = e.target.value; 
                this.setState({ [key]: value });
            }

            addBook(e) {
                e.preventDefault();
                const newBook = {
                    title: this.state.title,
                    author: this.state.author,
                    pubDate: parseInt(this.state.pubDate),
                };

                console.log(JSON.stringify(newBook));
                fetch('/api/books', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(newBook)
                })
                .then(res => res.json())
                .then(() => this.props.action())
                .catch((err) => { console.log('Database Error!', err) });                
            }

            render() {
                return(
                    <div>
                        <form onSubmit={(e) => this.addBook(e)}>
                            <div className="form-group">
                                <label htmlFor="title">Title</label>
                                <input type="text" className="form-control" name="title" onChange={(e) => this.onInputChange(e)} />
                            </div>
                            <div className="form-group">
                                <label htmlFor="author">Author</label>
                                <input type="text" className="form-control" name="author" onChange={(e) => this.onInputChange(e)} />
                            </div>
                            <div className="form-group">
                                <label htmlFor="pubDate">Publishing Date</label>
                                <input type="number" className="form-control" name="pubDate" onChange={(e) => this.onInputChange(e)} />
                            </div>

                            <button type="submit" className="btn btn-primary">Add Book</button>
                            <button className="btn btn-outline-success my-2 my-sm-0" href="#" onClick={this.props.action}>Back to Book List</button>
                        </form>
                    </div>
                );
            }
        }

        ReactDOM.render(<App />, document.getElementById('app'));
    </script>
</body>

</html>