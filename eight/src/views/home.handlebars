<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Assignment 7</title>

    <!-- React Library -->
    <script src="https://unpkg.com/react@16/umd/react.development.js"></script>
    <!-- React DOM Library -->
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>
    <!-- Babel Library -->
    <script src="https://unpkg.com/babel-standalone@6.15.0/babel.min.js"></script>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
        crossorigin="anonymous">
</head>

<body>
    <div id="app">React not rendering</div>

    <script type="text/babel">
        class App extends React.Component {
            // constructor function
            constructor(props) {
                super(props);
        
                // set state 
                this.state = { books: [], selected: null };

                // bind events to this
                this.showBook = this.showBook.bind(this);
                this.resetData = this.resetData.bind(this);
                this.deleteBook = this.deleteBook.bind(this);
                this.addBook = this.addBook.bind(this);
            }

            // code to run when page loads; get all books
            componentDidMount() {
                fetch('/api/books/')
                .then(response => response.json())
                .then(responseData => { this.setState({ books: responseData } )})
                .catch((err) => { console.log('Fetching and parsing data error', err) });
            }

            // show single book details
            showBook(id, e) {
                e.preventDefault();
                const book = this.state.books.find((book) => book._id === id);
                this.setState({ selected: book });
            }

            // reset to list view
            resetData(e) {
                e.preventDefault();
                this.setState({ selected: null });
            }

            // delete book
            deleteBook(id, e) {
                e.preventDefault();
                fetch(`/api/book/delete/${id}`, {
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' },
                })
                .then((data) => {
                    const books = this.state.books.filter((book) => id !== book._id);
                    this.setState({ books: books });
                    this.resetData();
                })
                .catch((err) => { console.log('Fetching and parsing data error', err) });                
            }

            // add book
            addBook(e) {
                e.preventDefault();
            }

            render() {
                if (this.state.selected) {
                    return(
                        <div>
                            <Nav />
                            <table className="table">
                                <tbody>
                                    <tr>
                                        <td>Title</td>
                                        <td>{this.state.selected.title}</td>
                                    </tr>
                                    <tr>
                                        <td>Author</td>
                                        <td>{this.state.selected.author}</td>
                                    </tr>
                                    <tr>
                                        <td>Publishing Date</td>
                                        <td>{this.state.selected.pubDate}</td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <a href="#" onClick={(e) => this.resetData(e)}>Back to Book List</a> | <a href="#" onClick={(e) => this.deleteBook(this.state.selected._id, e)}>Delete Book</a>
                                        </td>
                                        <td></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    );
                } else if (this.state.books.length) {
                    return(
                        <div>
                            <Nav />
                            <table className="table">
                                <thead className="thead-dark">
                                    <tr>
                                        <th>Title</th>
                                        <th>Author</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {this.state.books.map((item) => {
                                        return (
                                            <tr key={item._id}>
                                                <td><a href="#" onClick={(e) => this.showBook(item._id, e)}>{item.title}</a></td>
                                                <td>{item.author}</td>
                                            </tr>
                                        );
                                    })}
                                </tbody>
                            </table>
                        </div>
                    );                 
                } else {
                    return <h2>Whoopsies</h2>
                }
            }
        }

        function Nav() {
            return(
                <nav className="navbar navbar-expand-lg navbar-light bg-light">
                    <a className="navbar-brand" href="/">My Library</a>
                    <button className="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                        <span className="navbar-toggler-icon"></span>
                    </button>
                
                    <div className="collapse navbar-collapse" id="navbarSupportedContent">
                        <ul className="navbar-nav mr-auto">
                            <li className="nav-item">
                                <a className="nav-link" href="/">Home
                                    <span className="sr-only">(current)</span>
                                </a>
                            </li>
                            <li className="nav-item">
                                <a className="nav-link" href="/add">Add Book</a>
                            </li>
                        </ul>
                        <form className="form-inline my-2 my-lg-0" method="post" action="/detail">
                            <input className="form-control mr-sm-2" type="search" placeholder="Search by Title" aria-label="Search by Title" id="title" name="title" />
                            <button className="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
                        </form>
                    </div>
                </nav>
            );
        } 

        ReactDOM.render(<App />, document.getElementById('app'));
    </script>
</body>

</html>